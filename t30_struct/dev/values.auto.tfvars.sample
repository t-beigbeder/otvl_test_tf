application_code = "A1B2"

env_name = "dev"

project_name = "theProject"

app_has_infra_bucket = true

resource_tags = [
  {
    key                 = "managed-by"
    is_constant         = true
    constant            = "opentofu"
    is_application_code = false
    is_env_name         = false
    is_project_name     = false
  },
  {
    key                 = "corp:billing"
    is_constant         = false
    is_application_code = true
    is_env_name         = false
    is_project_name     = false
  },
  {
    key                 = "corp:application_code"
    is_constant         = false
    is_application_code = true
    is_env_name         = false
    is_project_name     = false
  },
  {
    key                 = "corp:environment"
    is_constant         = false
    is_application_code = false
    is_env_name         = true
    is_project_name     = false
  },
  {
    key                 = "app:project"
    is_constant         = false
    is_application_code = false
    is_env_name         = false
    is_project_name     = true
  }

]

hosted_zone_name = "aws.otvl.org"
hosted_zone_is_private = false
alb_is_internal = false
alb_domain_name = "alb.aws.otvl.org"

ec2_admin_instance_type = "t3.micro"

//ec2_lb_instance_ami_name_regex = "ubuntu-jammy-22.04-amd64-server"
//ec2_lb_instance_ami_owner = "099720109477" # Canonical
ec2_lb_instance_ami_name_regex = "amzn2-ami-hvm"
ec2_lb_instance_ami_owner      = "137112412989" # Amazon
ec2_lb_instance_type           = "t3.micro"
ec2_lb_instance_user_data      = <<-EOF
    amazon-linux-extras enable nginx1
    yum clean metadata
    yum install -y nginx git amazon-efs-utils
    mkdir /root/iac
    cd /root/iac
    git clone https://github.com/t-beigbeder/otvl_test_tf
    bash otvl_test_tf/app_sample/install.sh eu-west-3
  EOF
ec2_lb_instance_ssh_key_name   = "tmp"

ec2_mandatory_policy_name = "policy-sample-ec2-permissions"
ec2_mandatory_sg_name = "sample-instance-dbg"
asg_subnets_name_filter = "-default-"
ebs_volume_size = 8
